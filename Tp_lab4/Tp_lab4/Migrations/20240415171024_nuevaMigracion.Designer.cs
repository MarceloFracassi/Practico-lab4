// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Practico_labIV.dbContext;

#nullable disable

namespace Tp_lab4.Migrations
{
    [DbContext(typeof(DbContextPractico))]
    [Migration("20240415171024_nuevaMigracion")]
    partial class nuevaMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.18");

            modelBuilder.Entity("Tp_lab4.Entities.TodoItem", b =>
                {
                    b.Property<int>("Id_todo_item")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id_todo_item");

                    b.HasIndex("UserId");

                    b.ToTable("TodoItems");

                    b.HasData(
                        new
                        {
                            Id_todo_item = 1,
                            Description = "Rugby",
                            Title = "Pelota",
                            UserId = 0
                        },
                        new
                        {
                            Id_todo_item = 2,
                            Description = "Futbol",
                            Title = "Pelota",
                            UserId = 0
                        },
                        new
                        {
                            Id_todo_item = 3,
                            Description = "Basquet",
                            Title = "Pelota",
                            UserId = 0
                        },
                        new
                        {
                            Id_todo_item = 4,
                            Description = "Golf",
                            Title = "Pelota",
                            UserId = 0
                        },
                        new
                        {
                            Id_todo_item = 5,
                            Description = "Tenis",
                            Title = "Pelota",
                            UserId = 0
                        });
                });

            modelBuilder.Entity("Tp_lab4.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Donado 123",
                            Email = "Marcelo@gmail.com",
                            Name = "Marcelo"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Wilde 123",
                            Email = "Pedro@gmail.com",
                            Name = "Pedro"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Argentino 123",
                            Email = "Ana@gmail.com",
                            Name = "Ana"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Cordoba 123",
                            Email = "Sofia@gmail.com",
                            Name = "Sofia"
                        });
                });

            modelBuilder.Entity("Tp_lab4.Entities.TodoItem", b =>
                {
                    b.HasOne("Tp_lab4.Entities.User", "User")
                        .WithMany("TodoItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tp_lab4.Entities.User", b =>
                {
                    b.Navigation("TodoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
